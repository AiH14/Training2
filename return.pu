@startuml return
title: returnの書き方

participant hogehoge

activate hogehoge
==void関数の場合==
rnote over hogehoge #SkyBlue
void func1()                     
{
    printf("何もしない\n");
}
end note
hogehoge -> hogehoge:func1()
activate hogehoge
    note over hogehoge
        何もしない旨のPrint文表示
    end note
return

==リターンを関数内で設定する場合==
rnote over hogehoge #SkyBlue
int func2()                     
{
    ret = 0;
    if (a = 1)
    {
        ret = 1;
    }
    else
    {
        ret = 0;
    }
    return(ret);
}
end note
hogehoge -> hogehoge:func2()
activate hogehoge
    alt a = 1
        note over hogehoge
            ret に１設定
        end note
    else
        note over hogehoge
            ret に0設定
        end note
    end
return(ret)

==他の関数リターンをリターンする場合==
rnote over hogehoge #SkyBlue
int func3()                     
{
    ret = 0;
    
    ret = func2(a)
    return(ret);
}
end note

hogehoge -> hogehoge:func3()
activate hogehoge
    hogehoge -> hogehoge:func2()
    activate hogehoge
        alt a = 1
            note over hogehoge
                ret に１設定
            end note
        else
            note over hogehoge
                ret に0設定
            end note
        end
    return(ret)
return(ret)
==リターンが複数存在する場合==
rnote over hogehoge #SkyBlue
int func4()                     
{
    ret = 0;
    
    ret = func2(a)
    if (ret = 1)
    {
        return(ret);
    }
    else
    {
        printf("SUCCESS!\n");
    }
    return(ret);
}
end note
hogehoge -> hogehoge:func4()
activate hogehoge
    hogehoge -> hogehoge:func2()
    activate hogehoge
        alt a = 1
            note over hogehoge
                ret に１設定
            end note
        else
            note over hogehoge
                ret に0設定
            end note
        end
    return(ret)
    alt ret = 1
        hogehoge --> hogehoge:return(ret)
    else
        note over hogehoge
            SUCCESSをPrint文で表示
        end note
    end
return(ret)

@enduml